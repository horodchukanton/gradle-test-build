plugins {
    id 'groovy'
}

// Assembling and testing simple groovy project
group 'com.sample'
version '1.0'


repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'commons-cli:commons-cli:1.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

wrapper {
    version = '4.9'
}

test {
    testLogging.showStandardStreams = true
}

// This is one this project is written for
class TestTask extends DefaultTask {

    String configuredFailMessage
    String configuredSleepTime
    String configuredPrintMessage = "Printed Default Message"

    // Parameters will be passed in the constructor (which is generated by Groovy)

    @TaskAction
    void doConfiguredTask() {
        if (configuredSleepTime) {
            Thread.sleep(Long.valueOf((String) configuredSleepTime) * 1000)
        }

        if (configuredFailMessage) {
            throw new RuntimeException((String) configuredFailMessage)
        }

        if (configuredPrintMessage) {
            println configuredPrintMessage
        }
    }

}

task configuredTask(type: TestTask) {
    if (variablesSource == 'properties') {
        configuredFailMessage = failMessage ?: ""
        configuredSleepTime = sleepTime ?: 0
        configuredPrintMessage = testMessage ?: "Default message"
    } else if (variablesSource == 'environment') {
        configuredFailMessage = System.getenv("FAIL_MESSAGE") ?: ""
        configuredSleepTime = System.getenv("SLEEP_TIME") ?: 0
        configuredPrintMessage = System.getenv("TEST_MESSAGE") ?: "Default message"
    } else {
        throw new RuntimeException("variablesSource should be 'properties' or 'environment'")
    }
}

// Adding the task to 'check' phase
check.dependsOn.add('configuredTask')
